TARGET_EXEC ?= nuquake.exe

BUILD_DIR ?= ./build_win
EXEC_DIR ?= $(BUILD_DIR)
SRC_DIRS ?= ./src

#Nedeed packaged:
#sudo apt install build-essential mesa-common-dev libgl1-mesa-glx libgl1-mesa-dev libxxf86dga-dev libxxf86vm-dev

BUILDING_ON_WINDOWS := TRUE

FILTER_PLATFORMS = ./src/dreamcast/% ./src/linux/% ./src/null/% ./src/common/unused/% ./src/client/unused/% ./src/win32/unused/%

SRCS := src/client/cl_demo.c src/client/cl_input.c src/client/cl_main.c src/client/cl_parse.c src/client/cl_tent.c src/client/keys.c src/client/menu.c src/client/snd_dma.c src/client/snd_mem.c src/client/view.c src/common/chase.c src/common/cmd.c src/common/common.c src/common/console.c src/common/crc.c src/common/cvar.c src/common/host.c src/common/host_cmd.c src/common/mathlib.c src/common/net_loop.c src/common/net_main.c src/common/sbar.c src/common/wad.c src/common/world.c src/common/zone.c src/renderer/gl_batcher.c src/renderer/gl_draw.c src/renderer/gl_mesh.c src/renderer/gl_model.c src/renderer/gl_refrag.c src/renderer/gl_rlight.c src/renderer/gl_rmain.c src/renderer/gl_rmisc.c src/renderer/gl_rsurf.c src/renderer/gl_screen.c src/renderer/gl_warp.c src/renderer/menu_loader.c src/renderer/r_part.c src/server/sv_main.c src/server/sv_move.c src/server/sv_phys.c src/server/sv_user.c src/vm/pr_cmds.c src/vm/pr_edict.c src/vm/pr_exec.c src/win32/conproc.c src/win32/in_win.c src/win32/net_none.c src/win32/snd_mix.c src/win32/snd_win.c src/win32/sys_win.c src/win32/vid_wgl.c ./src/null/cd_null.c src/win32/math.S src/win32/winrc.rc
OBJS := $(SRCS:%=$(BUILD_DIR)/%.o)
DEPS := $(OBJS:.o=.d)

INC_DIRS := src src/client src/common src/null src/renderer src/server src/vm src/win32 src/win32/AL
INC_FLAGS := $(addprefix -I,$(INC_DIRS))

#
WIN98_CFLAGS = -D_WIN32_WINNT=0x0501 -DWINVER=0x0501 -DANSI  -DWIN98 -m32 -march=i386 -mtune=i386
BASE_CFLAGS = -Wall -Wextra -std=gnu99 -D_WIN32 -DWIN32 -DGLQUAKE -DWINDOWS -Wformat=0 -Wno-missing-field-initializers -ffunction-sections -fdata-sections -Xlinker -Map=windows.map 
#$(WIN98_CFLAGS)
RELEASE_CFLAGS = $(BASE_CFLAGS) -O2 -s -funroll-loops -fsingle-precision-constant -finline-small-functions
DEBUG_CFLAGS = $(BASE_CFLAGS) -DDEBUG -O0 -g -funroll-loops -fsingle-precision-constant -finline-small-functions -fno-omit-frame-pointer
fairly = -pg -finstrument-functions-exclude-function-list=_Sys_FloatTime,___fentry__,__mcount_private,_SleepUntilInput
#-DDIRECTX

release: CFLAGS = $(RELEASE_CFLAGS)

debug: TARGET_EXEC = nuquake_d.exe
debug: CFLAGS = $(DEBUG_CFLAGS) -Wall -Wextra -std=gnu99

release: $(BUILD_DIR)/$(TARGET_EXEC)

debug: $(BUILD_DIR)/$(TARGET_EXEC)

# Very Important, if this doesnt match your enviroment, you NEED to change
PREFIX = x86_64-w64-mingw32-

CC = $(PREFIX)gcc
LD = $(CC)
AS = $(CC)
LDFLAGS := -Wl,--gc-sections

RC = $(PREFIX)windres
RCFLAGS = --define GCC_WINDRES

STRIP = $(PREFIX)strip

LIBS = -lopengl32 -luser32 -lole32 -lgdi32 -lcomctl32 -lwinmm -lm
# deps/zlib-master/libz.a -Ldeps/dxsdk_apr_2006/lib/x86 -ldxguid -lglu32
INCS = -iquote src/common -iquote src/win32 -iquote src -Ideps/cglm/include -Ideps/dxsdk_apr_2006/include

CPPFLAGS ?= $(INC_FLAGS) -MMD -MP

$(BUILD_DIR)/$(TARGET_EXEC): $(OBJS)
	@echo "+ $@"
	@-$(call MKDIR_P,"$(dir $@)")
	@$(CC) $(INCS) $(CFLAGS) $(LDFLAGS) -o $@  $(OBJS) $(LIBS) -lm

$(BUILD_DIR)/%.S.o: %.S
	@-$(call MKDIR_P,"$(dir $@)")
	$(AS) $(ASFLAGS) -c $< -o $@

$(BUILD_DIR)/%.d.o: %.d
	@-$(call MKDIR_P,"$(dir $@)")

$(BUILD_DIR)/%.c.o: %.c
	@echo "> $@"
	@-$(call MKDIR_P,"$(dir $@)")
	@$(CC) $(CPPFLAGS) $(CFLAGS) $(INCS)  $(LDFLAGS) -c $< -o $@

$(BUILD_DIR)/%.rc.o: %.rc
	@echo  "# $@"
	@-$(call MKDIR_P,"$(dir $@)")
	@$(RC) $(RCFLAGS) -o $@ $<


zlib :
	@$(MAKE) -C deps/zlib-master -f win32/Makefile.gcc PREFIX=$(PREFIX) libz.a

.PHONY: clean

clean:
	$(RM) -r $(BUILD_DIR)/src

-include $(DEPS)

ifeq ($(BUILDING_ON_WINDOWS), TRUE)
	MKDIR_P = (if not exist $(subst /,\\,$(1)) mkdir $(subst \\,/,$(1)))
	CP_N = cp -n
else
	MKDIR_P = mkdir -p $(1)
	CP_N = cp -n
endif
